enum UserStatus {
  CREATED
  ACTIVE
  DISABLED
}

enum GetUsersOrder {
  lastNameAsc
  updatedAtAsc
  updatedAtDesc
}

type User {
  id: String!
  firstName: String!
  lastName: String!
  email: String!
  status: UserStatus!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
}

input UpdateUserInput {
  id: String!
  firstName: String
  lastName: String
  email: String
}

input GetUsersInput {
  firstName: String
  lastName: String
  email: String
  status: UserStatus
  orderBy: GetUsersOrder = updatedAtDesc
  skip: Int
  return: Int
}


type Query {
  listUsers(getUsersInput: GetUsersInput!): [User]
  getUser(id: String!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
}
